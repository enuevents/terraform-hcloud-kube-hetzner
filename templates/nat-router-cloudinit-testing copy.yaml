#cloud-config

# This configuration is for debian 12

package_reboot_if_required: false
package_update: true
package_upgrade: true

# python3-systemd is required on debian 12 for fail2ban to work
packages: 
  - python3-systemd
  - fail2ban
  - ca-certificates
  - curl
  - wireguard

users:
  - name: nat-router
    shell: /bin/bash
    groups: sudo
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGOb+Vd176UHAKQQnFwJsGV1XzzqEyhZEmPAl5SOKtcQ

write_files:
  # NAT configuration
  - path: /etc/network/interfaces
    content: |
      auto eth0
      iface eth0 inet dhcp
          post-up echo 1 > /proc/sys/net/ipv4/ip_forward
          post-up iptables -t nat -A POSTROUTING -s '10.0.0.0/16' -o eth0 -j MASQUERADE
    append: true

  # SSH hardening
  - path: /etc/ssh/sshd_config.d/ssh-hardening.conf
    content: |
      Port 2222
      PermitRootLogin no
      PasswordAuthentication no
      KbdInteractiveAuthentication no
      ChallengeResponseAuthentication no
      MaxAuthTries 5
      AllowAgentForwarding yes
      AllowTcpForwarding yes
      X11Forwarding no
      AuthorizedKeysFile .ssh/authorized_keys
      AllowUsers nat-router
    
  # fail2ban backend fallback for debian 12
  - path: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      backend = systemd

  # fail2ban configuration
  - path: /etc/fail2ban/jail.d/sshd.local
    content: |
      [sshd]
      enabled = true
      maxretry = 5
      findtime = 10
      bantime = 24h
      logpath = %(sshd_log)s
      backend = %(sshd_backend)s

  # Wireguard UI Config
  - path: /opt/wireguard-ui/compose.yaml
    content: |
      services:
        wireguard-ui:
          image: ngoduykhanh/wireguard-ui:latest
          container_name: wireguard-ui
          cap_add:
            - NET_ADMIN
          network_mode: host
          expose:
            - 5000
          environment:
            # Wireguard configuration
            # - SUBNET_RANGES=${ wg_subnet_ranges }
            # - WGUI_ENDPOINT_ADDRESS=${ wg_endpoint_address }
            # - WGUI_DNS=${ wg_dns }
            # - WGUI_MTU=${ wg_mtu }
            # - WGUI_PERSISTENT_KEEPALIVE=${ wg_persistent_keepalive }
            # - WGUI_SERVER_INTERFACE_ADDRESSES=${ wg_interface_addresses }
            # - WGUI_SERVER_LISTEN_PORT=${ wg_listen_port }
            # - WGUI_SERVER_POST_UP_SCRIPT=${ wg_post_up_script }
            # - WGUI_SERVER_POST_DOWN_SCRIPT=${ wg_post_down_script }

            # Admin credentials
            # - WGUI_USERNAME=${ wgui_username }
            - WGUI_PASSWORD=ap0s97hdf0s87d

            # Sessions
            - SESSION_SECRET=ap9sd7fh0a98s7d
            # - SESSION_MAX_DURATION=${ wgui_session_max_duration }

            # Binding
            # - BIND_ADDRESS=${ wgui_bind_address }
            # - WGUI_LOG_LEVEL=${ wgui_log_level }

            # Client configuration defaults
            # - WGUI_DEFAULT_CLIENT_ALLOWED_IPS=${ wgui_default_client_allowed_ips }
            # - WGUI_DEFAULT_CLIENT_EXTRA_ALLOWED_IPS=${ wgui_default_client_extra_allowed_ips }
            # - WGUI_DEFAULT_CLIENT_USE_SERVER_DNS=${ wgui_default_client_use_server_dns }
            # - WGUI_DEFAULT_CLIENT_ENABLE_AFTER_CREATION=${ wgui_default_client_enable_after_creation }

            # Dont manage wireguard from UI as it is running on the host and managed by systemd
            - WGUI_MANAGE_START=false
            - WGUI_MANAGE_RESTART=false

            # Email configuration
            # - EMAIL_FROM_ADDRESS=${ wgui_email_from_address }
            # - EMAIL_FROM_NAME=${ wgui_email_from_name }

            # - SENDGRID_API_KEY=${ wgui_email_sendgrid_api_key }

            # - SMTP_HOSTNAME=${ wgui_email_smtp_hostname }
            # - SMTP_PORT=${ wgui_email_smtp_port }
            # - SMTP_USERNAME=${ wgui_email_smtp_username }
            # - SMTP_PASSWORD=${ wgui_email_smtp_password }
            # - SMTP_AUTH_TYPE=${ wgui_email_smtp_auth_type }
            # - SMTP_ENCRYPTION=${ wgui_email_smtp_encryption }
            # - SMTP_HELO=${ wgui_email_smtp_helo }
          logging:
            driver: json-file
            options:
              max-size: 50m
          volumes:
            - ./db:/app/db:rw
            - /etc/wireguard:/etc/wireguard:rw

  - path: /etc/systemd/system/wireguard-ui.service
    content: |
      [Unit]
      Description=Restart WireGuard
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/systemctl restart wg-quick@wg0.service

      [Install]
      RequiredBy=wireguard-ui.path

  - path: /etc/systemd/system/wireguard-ui.path
    content: |
      [Unit]
      Description=Watch /etc/wireguard/wg0.conf for changes

      [Path]
      PathModified=/etc/wireguard/wg0.conf

      [Install]
      WantedBy=multi-user.target


runcmd:
  # Install Docker
  - install -m 0755 -d /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
  - chmod a+r /etc/apt/keyrings/docker.asc
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt update
  - apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  # Start systemd services for wireguard restart
  - systemctl enable wireguard-ui.{path,service}
  - systemctl start wireguard-ui.{path,service}

  # Start wireguard UI
  - docker compose -f /opt/wireguard-ui/compose.yaml up -d
  
  - systemctl enable fail2ban
  - systemctl start fail2ban
  - systemctl restart sshd
  - systemctl restart networking

  - reboot # Artificial reboot